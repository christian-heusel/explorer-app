---
# tasks file for ansible-wifi-router
# This playbook installs and configures needed packages.

- name: Install hostapd & isc-dhcp-server package
  apt:
    name: ["firmware-ralink", "hostapd",  "wireless-tools", "dnsmasq", "iw"]
    state: present

- name: Comment domain-name in dhcpd.conf
  lineinfile:
    dest: /etc/dhcp/dhcpd.conf
    regexp: '^(#?option domain-name )'
    line: '#option domain-name '

- name: Comment domain-name-servers in dhcpd.conf
  lineinfile:
    dest: /etc/dhcp/dhcpd.conf
    regexp: '^(#?option domain-name-servers )'
    line: '#option domain-name-servers '

- name: Uncomment authoritative in dhcpd.conf
  lineinfile:
    dest: /etc/dhcp/dhcpd.conf
    regexp: '^(#?authoritative;)'
    line: 'authoritative;'

- name: Insert subnet block into dhcpd.conf
  blockinfile:
    path: /etc/dhcp/dhcpd.conf
    block: |
      subnet 192.168.10.0 netmask 255.255.255.0 {
        range {{subnet_start}} {{subnet_end}};
        option broadcast-address {{broadcast_address}};
        option routers 192.168.10.1;
        default-lease-time 600;
        max-lease-time 7200;
        option domain-name "local-network";
        option domain-name-servers 8.8.8.8, 8.8.4.4;
      }
- name: Set interfaces to isc-dhcp-server configuration
  lineinfile:
    dest: /etc/default/isc-dhcp-server
    regexp: '^(#?INTERFACES=")'
    line: 'INTERFACES="{{interface_in}}"'

- name: Set used newtwork interface down
  command: ifconfig {{interface_in}} down

- name: Set /etc/network/interfaces configuration
  template:
    src: interfaces.j2
    dest: /etc/network/interfaces.d/
    owner: root
    group: root
    mode: 0644

- name: Create hostapd.conf configuration
  template:
    src: hostapd.conf.j2
    dest: /etc/hostapd/hostapd.conf
    owner: root
    group: root
    mode: 0644

- name: Set hostapd to use hostapd.conf configure
  lineinfile:
    dest: /etc/default/hostapd
    regexp: '^(#?DAEMON_CONF=")'
    line: 'DAEMON_CONF="/etc/hostapd/hostapd.conf"'

- name: Set NAT
  lineinfile:
    path: /etc/sysctl.conf
    line: 'net.ipv4.ip_forward=1'
  when: allow_connection

- name: Start the translation
  command: sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
  when: allow_connection

- name: set the correct WiFi country
  shell: raspi-config nonint do_wifi_country "{{ wifi_country }}"

- name: set the correct country code in /etc/default/crda
  lineinfile:
    path: /etc/default/crda
    regexp: '^REGDOMAIN='
    line: "REGDOMAIN={{ wifi_country }}"

- name: Set used network interface up
  command: ifconfig {{interface_in}} up

- name: Iptable settings
  command: iptables {{item}}
  with_items:
    - -t nat -A POSTROUTING -o {{interface_out}} -j MASQUERADE
    - -A FORWARD -i {{interface_out}} -o {{interface_in}} -m state --state RELATED,ESTABLISHED -j ACCEPT
    - -A FORWARD -i {{interface_in}} -o {{interface_out}} -j ACCEPT
  when: allow_connection

- name: Set hostapd and isc-dhcp-server to start in boot
  command: update-rc.d {{item}} enable
  with_items:
    - hostapd
    - isc-dhcp-server

- name: Backup the NAT configuration
  command: sh -c "iptables-save > /etc/iptables.ipv4.nat"
  when: allow_connection

- name: Reboot
  command: /sbin/shutdown -r +1
  async: 0
  poll: 0
  ignore_errors: True